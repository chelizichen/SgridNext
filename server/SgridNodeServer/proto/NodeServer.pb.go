// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: NodeServer.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetNodeStatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` // 节点状态内容，json格式
}

func (x *GetNodeStatRsp) Reset() {
	*x = GetNodeStatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NodeServer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeStatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeStatRsp) ProtoMessage() {}

func (x *GetNodeStatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_NodeServer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeStatRsp.ProtoReflect.Descriptor instead.
func (*GetNodeStatRsp) Descriptor() ([]byte, []int) {
	return file_NodeServer_proto_rawDescGZIP(), []int{0}
}

func (x *GetNodeStatRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetNodeStatRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetNodeStatRsp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type SyncStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // 节点状态内容，json格式
}

func (x *SyncStatReq) Reset() {
	*x = SyncStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NodeServer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStatReq) ProtoMessage() {}

func (x *SyncStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_NodeServer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStatReq.ProtoReflect.Descriptor instead.
func (*SyncStatReq) Descriptor() ([]byte, []int) {
	return file_NodeServer_proto_rawDescGZIP(), []int{1}
}

func (x *SyncStatReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ActivateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId      int32   `protobuf:"varint,1,opt,name=serverId,proto3" json:"serverId,omitempty"`
	PackageId     int32   `protobuf:"varint,2,opt,name=packageId,proto3" json:"packageId,omitempty"`
	ServerNodeIds []int32 `protobuf:"varint,3,rep,packed,name=serverNodeIds,proto3" json:"serverNodeIds,omitempty"`
	Type          int32   `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"` // 1 部署激活 2 重启激活 3关闭
}

func (x *ActivateReq) Reset() {
	*x = ActivateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NodeServer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateReq) ProtoMessage() {}

func (x *ActivateReq) ProtoReflect() protoreflect.Message {
	mi := &file_NodeServer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateReq.ProtoReflect.Descriptor instead.
func (*ActivateReq) Descriptor() ([]byte, []int) {
	return file_NodeServer_proto_rawDescGZIP(), []int{2}
}

func (x *ActivateReq) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *ActivateReq) GetPackageId() int32 {
	if x != nil {
		return x.PackageId
	}
	return 0
}

func (x *ActivateReq) GetServerNodeIds() []int32 {
	if x != nil {
		return x.ServerNodeIds
	}
	return nil
}

func (x *ActivateReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type BasicRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *BasicRes) Reset() {
	*x = BasicRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NodeServer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicRes) ProtoMessage() {}

func (x *BasicRes) ProtoReflect() protoreflect.Message {
	mi := &file_NodeServer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicRes.ProtoReflect.Descriptor instead.
func (*BasicRes) Descriptor() ([]byte, []int) {
	return file_NodeServer_proto_rawDescGZIP(), []int{3}
}

func (x *BasicRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BasicRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SyncReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`         // 1 同步配置文件 2 同步服务包
	ServerId int32  `protobuf:"varint,2,opt,name=serverId,proto3" json:"serverId,omitempty"` // 节点id
	FileName string `protobuf:"bytes,3,opt,name=fileName,proto3" json:"fileName,omitempty"`
}

func (x *SyncReq) Reset() {
	*x = SyncReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NodeServer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncReq) ProtoMessage() {}

func (x *SyncReq) ProtoReflect() protoreflect.Message {
	mi := &file_NodeServer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncReq.ProtoReflect.Descriptor instead.
func (*SyncReq) Descriptor() ([]byte, []int) {
	return file_NodeServer_proto_rawDescGZIP(), []int{4}
}

func (x *SyncReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SyncReq) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *SyncReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type CgroupLimitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId int32   `protobuf:"varint,1,opt,name=serverId,proto3" json:"serverId,omitempty"`      // 节点id
	NodeIds  []int32 `protobuf:"varint,2,rep,packed,name=nodeIds,proto3" json:"nodeIds,omitempty"` // cgroup id
	Type     int32   `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`              // 1 CPU 2 内存
	Value    float32 `protobuf:"fixed32,4,opt,name=value,proto3" json:"value,omitempty"`           // 限制值
}

func (x *CgroupLimitReq) Reset() {
	*x = CgroupLimitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NodeServer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CgroupLimitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CgroupLimitReq) ProtoMessage() {}

func (x *CgroupLimitReq) ProtoReflect() protoreflect.Message {
	mi := &file_NodeServer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CgroupLimitReq.ProtoReflect.Descriptor instead.
func (*CgroupLimitReq) Descriptor() ([]byte, []int) {
	return file_NodeServer_proto_rawDescGZIP(), []int{5}
}

func (x *CgroupLimitReq) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *CgroupLimitReq) GetNodeIds() []int32 {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

func (x *CgroupLimitReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CgroupLimitReq) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type CheckStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId int32   `protobuf:"varint,1,opt,name=serverId,proto3" json:"serverId,omitempty"`      // 节点id
	NodeIds  []int32 `protobuf:"varint,2,rep,packed,name=nodeIds,proto3" json:"nodeIds,omitempty"` // cgroup id
}

func (x *CheckStatReq) Reset() {
	*x = CheckStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NodeServer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckStatReq) ProtoMessage() {}

func (x *CheckStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_NodeServer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckStatReq.ProtoReflect.Descriptor instead.
func (*CheckStatReq) Descriptor() ([]byte, []int) {
	return file_NodeServer_proto_rawDescGZIP(), []int{6}
}

func (x *CheckStatReq) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *CheckStatReq) GetNodeIds() []int32 {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

type DownloadFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	ServerId int32  `protobuf:"varint,2,opt,name=serverId,proto3" json:"serverId,omitempty"` // 服务ID
	Type     int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`         // 见 constant.go 的映射
}

func (x *DownloadFileRequest) Reset() {
	*x = DownloadFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NodeServer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRequest) ProtoMessage() {}

func (x *DownloadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_NodeServer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileRequest.ProtoReflect.Descriptor instead.
func (*DownloadFileRequest) Descriptor() ([]byte, []int) {
	return file_NodeServer_proto_rawDescGZIP(), []int{7}
}

func (x *DownloadFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *DownloadFileRequest) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *DownloadFileRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type DownloadFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg   string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data  []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	IsEnd bool   `protobuf:"varint,4,opt,name=isEnd,proto3" json:"isEnd,omitempty"`
}

func (x *DownloadFileResponse) Reset() {
	*x = DownloadFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NodeServer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileResponse) ProtoMessage() {}

func (x *DownloadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_NodeServer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileResponse.ProtoReflect.Descriptor instead.
func (*DownloadFileResponse) Descriptor() ([]byte, []int) {
	return file_NodeServer_proto_rawDescGZIP(), []int{8}
}

func (x *DownloadFileResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DownloadFileResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DownloadFileResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DownloadFileResponse) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

type GetFileListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId    int32 `protobuf:"varint,1,opt,name=serverId,proto3" json:"serverId,omitempty"`       // 节点id
	Type        int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`               // 1 日志
	LogCategory int32 `protobuf:"varint,3,opt,name=logCategory,proto3" json:"logCategory,omitempty"` // 日志分类
}

func (x *GetFileListReq) Reset() {
	*x = GetFileListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NodeServer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileListReq) ProtoMessage() {}

func (x *GetFileListReq) ProtoReflect() protoreflect.Message {
	mi := &file_NodeServer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileListReq.ProtoReflect.Descriptor instead.
func (*GetFileListReq) Descriptor() ([]byte, []int) {
	return file_NodeServer_proto_rawDescGZIP(), []int{9}
}

func (x *GetFileListReq) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *GetFileListReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetFileListReq) GetLogCategory() int32 {
	if x != nil {
		return x.LogCategory
	}
	return 0
}

type GetFileListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	FileList []string `protobuf:"bytes,3,rep,name=fileList,proto3" json:"fileList,omitempty"`
}

func (x *GetFileListResponse) Reset() {
	*x = GetFileListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NodeServer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileListResponse) ProtoMessage() {}

func (x *GetFileListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_NodeServer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileListResponse.ProtoReflect.Descriptor instead.
func (*GetFileListResponse) Descriptor() ([]byte, []int) {
	return file_NodeServer_proto_rawDescGZIP(), []int{10}
}

func (x *GetFileListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetFileListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetFileListResponse) GetFileList() []string {
	if x != nil {
		return x.FileList
	}
	return nil
}

type GetFileListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	FileList []string `protobuf:"bytes,3,rep,name=fileList,proto3" json:"fileList,omitempty"`
}

func (x *GetFileListRsp) Reset() {
	*x = GetFileListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NodeServer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileListRsp) ProtoMessage() {}

func (x *GetFileListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_NodeServer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileListRsp.ProtoReflect.Descriptor instead.
func (*GetFileListRsp) Descriptor() ([]byte, []int) {
	return file_NodeServer_proto_rawDescGZIP(), []int{11}
}

func (x *GetFileListRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetFileListRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetFileListRsp) GetFileList() []string {
	if x != nil {
		return x.FileList
	}
	return nil
}

type GetLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerName  string `protobuf:"bytes,1,opt,name=serverName,proto3" json:"serverName,omitempty"` // 节点id
	LogType     int32  `protobuf:"varint,2,opt,name=logType,proto3" json:"logType,omitempty"`      // 1 head 2 tail
	FileName    string `protobuf:"bytes,3,opt,name=fileName,proto3" json:"fileName,omitempty"`     // 文件名
	Keyword     string `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Len         int32  `protobuf:"varint,5,opt,name=len,proto3" json:"len,omitempty"`
	ServerId    int32  `protobuf:"varint,6,opt,name=serverId,proto3" json:"serverId,omitempty"`
	LogCategory int32  `protobuf:"varint,7,opt,name=logCategory,proto3" json:"logCategory,omitempty"` // 日志分类
}

func (x *GetLogReq) Reset() {
	*x = GetLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NodeServer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogReq) ProtoMessage() {}

func (x *GetLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_NodeServer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogReq.ProtoReflect.Descriptor instead.
func (*GetLogReq) Descriptor() ([]byte, []int) {
	return file_NodeServer_proto_rawDescGZIP(), []int{12}
}

func (x *GetLogReq) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *GetLogReq) GetLogType() int32 {
	if x != nil {
		return x.LogType
	}
	return 0
}

func (x *GetLogReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *GetLogReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetLogReq) GetLen() int32 {
	if x != nil {
		return x.Len
	}
	return 0
}

func (x *GetLogReq) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *GetLogReq) GetLogCategory() int32 {
	if x != nil {
		return x.LogCategory
	}
	return 0
}

type GetLogRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetLogRes) Reset() {
	*x = GetLogRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NodeServer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogRes) ProtoMessage() {}

func (x *GetLogRes) ProtoReflect() protoreflect.Message {
	mi := &file_NodeServer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogRes.ProtoReflect.Descriptor instead.
func (*GetLogRes) Descriptor() ([]byte, []int) {
	return file_NodeServer_proto_rawDescGZIP(), []int{13}
}

func (x *GetLogRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetLogRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetLogRes) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_NodeServer_proto protoreflect.FileDescriptor

var file_NodeServer_proto_rawDesc = []byte{
	0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0d, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x21, 0x0a, 0x0b, 0x53, 0x79,
	0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x81, 0x01,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x30, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x55, 0x0a, 0x07, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x0e, 0x43, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x0c,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x73, 0x22, 0x61, 0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x66, 0x0a, 0x14, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x45, 0x6e, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x22, 0x62, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x22, 0x57, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xcb,
	0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c,
	0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x65, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f,
	0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6c, 0x6f, 0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x45, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x32, 0xff, 0x06, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x61, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x53, 0x67, 0x72, 0x69,
	0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0f, 0x53, 0x79,
	0x6e, 0x63, 0x41, 0x6c, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1a, 0x2e,
	0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x53, 0x67, 0x72, 0x69,
	0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x61, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4a,
	0x0a, 0x11, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x61, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x53,
	0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x47, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x16, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0b, 0x43, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1b,
	0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x53, 0x67,
	0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x53, 0x67, 0x72,
	0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x12, 0x52, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1d, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x12,
	0x18, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x53, 0x67, 0x72, 0x69,
	0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_NodeServer_proto_rawDescOnce sync.Once
	file_NodeServer_proto_rawDescData = file_NodeServer_proto_rawDesc
)

func file_NodeServer_proto_rawDescGZIP() []byte {
	file_NodeServer_proto_rawDescOnce.Do(func() {
		file_NodeServer_proto_rawDescData = protoimpl.X.CompressGZIP(file_NodeServer_proto_rawDescData)
	})
	return file_NodeServer_proto_rawDescData
}

var file_NodeServer_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_NodeServer_proto_goTypes = []interface{}{
	(*GetNodeStatRsp)(nil),       // 0: SgridProtocol.GetNodeStatRsp
	(*SyncStatReq)(nil),          // 1: SgridProtocol.SyncStatReq
	(*ActivateReq)(nil),          // 2: SgridProtocol.activateReq
	(*BasicRes)(nil),             // 3: SgridProtocol.basicRes
	(*SyncReq)(nil),              // 4: SgridProtocol.SyncReq
	(*CgroupLimitReq)(nil),       // 5: SgridProtocol.CgroupLimitReq
	(*CheckStatReq)(nil),         // 6: SgridProtocol.CheckStatReq
	(*DownloadFileRequest)(nil),  // 7: SgridProtocol.DownloadFileRequest
	(*DownloadFileResponse)(nil), // 8: SgridProtocol.DownloadFileResponse
	(*GetFileListReq)(nil),       // 9: SgridProtocol.GetFileListReq
	(*GetFileListResponse)(nil),  // 10: SgridProtocol.GetFileListResponse
	(*GetFileListRsp)(nil),       // 11: SgridProtocol.GetFileListRsp
	(*GetLogReq)(nil),            // 12: SgridProtocol.GetLogReq
	(*GetLogRes)(nil),            // 13: SgridProtocol.GetLogRes
	(*emptypb.Empty)(nil),        // 14: google.protobuf.Empty
}
var file_NodeServer_proto_depIdxs = []int32{
	14, // 0: SgridProtocol.NodeServant.KeepAlive:input_type -> google.protobuf.Empty
	14, // 1: SgridProtocol.NodeServant.GetNodeStat:input_type -> google.protobuf.Empty
	1,  // 2: SgridProtocol.NodeServant.SyncAllNodeStat:input_type -> SgridProtocol.SyncStatReq
	2,  // 3: SgridProtocol.NodeServant.ActivateServant:input_type -> SgridProtocol.activateReq
	2,  // 4: SgridProtocol.NodeServant.DeactivateServant:input_type -> SgridProtocol.activateReq
	4,  // 5: SgridProtocol.NodeServant.SyncConfigFile:input_type -> SgridProtocol.SyncReq
	4,  // 6: SgridProtocol.NodeServant.SyncServicePackage:input_type -> SgridProtocol.SyncReq
	5,  // 7: SgridProtocol.NodeServant.CgroupLimit:input_type -> SgridProtocol.CgroupLimitReq
	6,  // 8: SgridProtocol.NodeServant.CheckStat:input_type -> SgridProtocol.CheckStatReq
	7,  // 9: SgridProtocol.NodeServant.DownloadFile:input_type -> SgridProtocol.DownloadFileRequest
	9,  // 10: SgridProtocol.NodeServant.GetFileList:input_type -> SgridProtocol.GetFileListReq
	12, // 11: SgridProtocol.NodeServant.GetLog:input_type -> SgridProtocol.GetLogReq
	14, // 12: SgridProtocol.NodeServant.KeepAlive:output_type -> google.protobuf.Empty
	0,  // 13: SgridProtocol.NodeServant.GetNodeStat:output_type -> SgridProtocol.GetNodeStatRsp
	3,  // 14: SgridProtocol.NodeServant.SyncAllNodeStat:output_type -> SgridProtocol.basicRes
	3,  // 15: SgridProtocol.NodeServant.ActivateServant:output_type -> SgridProtocol.basicRes
	3,  // 16: SgridProtocol.NodeServant.DeactivateServant:output_type -> SgridProtocol.basicRes
	3,  // 17: SgridProtocol.NodeServant.SyncConfigFile:output_type -> SgridProtocol.basicRes
	3,  // 18: SgridProtocol.NodeServant.SyncServicePackage:output_type -> SgridProtocol.basicRes
	3,  // 19: SgridProtocol.NodeServant.CgroupLimit:output_type -> SgridProtocol.basicRes
	3,  // 20: SgridProtocol.NodeServant.CheckStat:output_type -> SgridProtocol.basicRes
	8,  // 21: SgridProtocol.NodeServant.DownloadFile:output_type -> SgridProtocol.DownloadFileResponse
	10, // 22: SgridProtocol.NodeServant.GetFileList:output_type -> SgridProtocol.GetFileListResponse
	13, // 23: SgridProtocol.NodeServant.GetLog:output_type -> SgridProtocol.GetLogRes
	12, // [12:24] is the sub-list for method output_type
	0,  // [0:12] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_NodeServer_proto_init() }
func file_NodeServer_proto_init() {
	if File_NodeServer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_NodeServer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeStatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NodeServer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NodeServer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NodeServer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NodeServer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NodeServer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CgroupLimitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NodeServer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NodeServer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NodeServer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NodeServer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NodeServer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NodeServer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NodeServer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NodeServer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_NodeServer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_NodeServer_proto_goTypes,
		DependencyIndexes: file_NodeServer_proto_depIdxs,
		MessageInfos:      file_NodeServer_proto_msgTypes,
	}.Build()
	File_NodeServer_proto = out.File
	file_NodeServer_proto_rawDesc = nil
	file_NodeServer_proto_goTypes = nil
	file_NodeServer_proto_depIdxs = nil
}
